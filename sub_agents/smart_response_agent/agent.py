import json
import logging
import os
from typing import List

from dotenv import load_dotenv
from google.adk.agents.llm_agent import LlmAgent
from google.adk.tools.mcp_tool.mcp_toolset import StdioServerParameters

from utils.customer_session_manager import CustomMCPToolset as MCPToolset

load_dotenv()

logger = logging.getLogger(__name__)

mcp_config_dir = os.path.abspath(os.path.join(os.path.abspath(__file__), "../../..", "tools"))

def load_smart_response_agent_tools():
    with open(f"{mcp_config_dir}/{os.path.basename(os.path.dirname(__file__))}.json") as file:
        data = json.load(file)
    mcp_servers = data.get("mcpServers", {})
    tools: List[MCPToolset] = []
    for server_name, server_config in mcp_servers.items():
        toolset = MCPToolset(
            connection_params=StdioServerParameters(
                command=server_config.get("command"),
                args=server_config.get("args"),
                env=server_config.get("env")
            )
        )
        tools.append(toolset)
    return tools

def create_smart_response_agent():
    toolset = load_smart_response_agent_tools()

    return LlmAgent(
        model="gemini-2.0-flash-exp",
        name="smart_response_agent",
        description="An agent which can include rich content given a simple text context using smart web search",
        instruction="""
            You are a smart augmentation agent designed to enhance plain text responses with relevant and helpful enrichments using Exa semantic search.

            Your input will be a raw text response (generated by another agent) and your goal is to transform it into a rich, contextually aware output by adding:
            - Useful hyperlinks to authoritative or relevant sources. (shorten the links)
            - Links for Images or GIFs or thumbnails available on google for the agent response.
            - Clear, step-by-step instructions (where needed).
            - Google map direction links if the response has any hotel restaurent or place name
            - Summarized Reviews, ratings and overall experience for a particular entity/service present in the response
            - Optional tips, clarifications, or related concepts (if helpful to the user).
            - Never change the original factual intent unless it is clearly wrong.

            You have access to the **Exa Search Tool**, which allows you to:
            - Perform semantic searches based on the response text or subtopics.
            - Retrieve article links, metadata, image sources, or descriptions.
            """,
        tools=toolset,
        output_key="smart_response_agent"
    )

root_agent = create_smart_response_agent()